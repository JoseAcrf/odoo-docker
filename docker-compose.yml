version: '3.8'

services:

  odoo:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: odoo
    depends_on:
      - db
      - redis
    ports:
      - "8069:8069"
      - "8072:8072"
    volumes:
      - ./addons:/mnt/extra-addons
      - ./logs:/var/log/odoo
      - ./config/odoo.conf:/etc/odoo/odoo.conf
    environment:
      - HOST=db
      - PORT=5432
      - USER=odoo
      - PASSWORD=odoo
    networks:
      - odoo-net
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: odoo
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - odoo-net
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - odoo-net
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - odoo-net
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - odoo-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - odoo-net
    restart: unless-stopped

networks:
  odoo-net:
    driver: bridge

volumes:
  pgdata:
  addons:
  logs:
